function loginUser() {
    var email = document.getElementById("emailInput").value
    var password = document.getElementById("passwordInput").value
    firebase.auth().signInWithEmailAndPassword(email, password).catch(function(error) {
        //error handling
        alert("ERROR: " + error);
    });
    
    alert("Welcome " + email + "!");
    closeLoginForm();
}

function logoutUser() {
    firebase.auth().signOut().then(function() {
        console.log("Successfully signed user out");
        //alert("You have been signed out.");
        location.reload();
    }, function(error) {
        alert(error.message);
    })
}

firebase.auth().onAuthStateChanged(function(user) {
    if(user) { 
        //User is signed in
        console.log("Current User: " + user);
        firebaseUser = firebase.auth().currentUser;
        console.log("displayName: " + firebaseUser.displayName);
        console.log("email: " + firebaseUser.email);
        console.log("photoUrl: " + firebaseUser.photoUrl);
        console.log("emailVerified: " + firebaseUser.emailVerified);
        console.log("uid: " + firebaseUser.uid);
        
        checkForUserInDatabase(user);
    } else  {
        //No user is signed in
    }
});


function checkForUserInDatabase(user) {
    var database = firebase.firestore();
    var docRef = database.collection("users").doc(user.uid)
    docRef.get().then(function(doc) {
        if (doc.exists) {
            //I'm assuming we will do more with this in the future
            console.log("User exists in database");
        } else {
            //If the user does not exist in the database we need to write them to it
            console.log("User not found in database");
            addUserToDatabase(user);
        }
    }).catch(function(error) {
       console.log("Error getting document ref: " + error); 
    });
}

function addUserToDatabase(user) {
    var database = firebase.firestore();
    
    // 1) All user entry document ids should be set to the user's uid that is generated by the auth
    // 2) I set username to the email, we should probably change the DB field to email instead since every user
    //    will have an email but not every user will have a display name
    database.collection("users").doc(user.uid).set({
        catalog: null,
        queue: null,
        username: user.email
    }).then(function() {
        console.log("User successfully written to database");
    }).catch(function(error) {
        console.log("Error writing user to database: " + error);
    });
}

function closeLoginForm() {
    $("#login-wrapper").attr("hidden",true);
    return false;
}